services:
  fluentd:
    image: kompira.azurecr.io/fluentd-with-rewrite-plugin:latest
    volumes:
      - ${SHARED_DIR:-/mnt/gluster/ke2me}/log:/var/log/fluentd
    configs:
      - source: fluentd-config
        target: /fluentd/etc/fluent.conf
    environment:
      TZ: ${TZ:-Asia/Tokyo}
      LOCAL_UID: ${LOCAL_UID:?LOCAL_UID must be set, try "export LOCAL_UID=$$(id -u $${USER})"}
      LOCAL_GID: ${LOCAL_GID:?LOCAL_GID must be set, try "export LOCAL_GID=$$(id -g $${USER})"}
    user: "${LOCAL_UID}:${LOCAL_GID}"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    deploy:
      mode: replicated
      replicas: 1
  kompira:
    image: ${IMAGE_NAME:-kompira.azurecr.io/kompira-enterprise}:${IMAGE_TAG:-latest}
    hostname: "kompira-{{.Task.Slot}}"
    environment:
      - DATABASE_URL=pgsql://kompira:kompira@${VIP:-host.docker.internal}:9999/kompira
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672
      - CACHE_URL=redis://redis:6379
      - LANGUAGE_CODE=${LANGUAGE_CODE:-ja}
      - TZ=${TZ:-Asia/Tokyo}
    volumes:
      - ${SHARED_DIR:-/mnt/gluster/ke2me}/home:/var/opt/kompira
    configs:
      - source: kompira-audit
        target: /opt/kompira/kompira_audit.yaml
    command: ["uwsgi"]
    stop_signal: SIGINT
    extra_hosts:
      - host.docker.internal:host-gateway
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        tag: "docker.{{.Name}}"
    depends_on:
      - fluentd
      - kengine
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
  kengine:
    image: ${IMAGE_NAME:-kompira.azurecr.io/kompira-enterprise}:${IMAGE_TAG:-latest}
    hostname: "kengine-{{.Task.Slot}}"
    environment:
      - DATABASE_URL=pgsql://kompira:kompira@${VIP:-host.docker.internal}:9999/kompira
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672
      - CACHE_URL=redis://redis:6379
      - LANGUAGE_CODE=${LANGUAGE_CODE:-ja}
      - TZ=${TZ:-Asia/Tokyo}
    volumes:
      - ${SHARED_DIR:-/mnt/gluster/ke2me}/home:/var/opt/kompira
    configs:
      - source: kompira-audit
        target: /opt/kompira/kompira_audit.yaml
    command: ["kompirad"]
    ulimits:
      nproc: 65535
      nofile: 65535
    extra_hosts:
      - host.docker.internal:host-gateway
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        tag: "docker.{{.Name}}"
    depends_on:
      - fluentd
      - rabbitmq
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
  jobmngrd:
    image: ${IMAGE_NAME:-kompira.azurecr.io/kompira-enterprise}:${IMAGE_TAG:-latest}
    hostname: "jobmngrd-{{.Task.Slot}}"
    environment:
      - TZ=${TZ:-Asia/Tokyo}
    volumes:
      - ${SHARED_DIR:-/mnt/gluster/ke2me}/home:/var/opt/kompira
    configs:
      - source: kompira-config
        target: /opt/kompira/kompira.conf
    command: ["jobmngrd"]
    ulimits:
      nproc: 65535
      nofile: 65535
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        tag: "docker.{{.Name}}"
    depends_on:
      - fluentd
      - rabbitmq
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
  redis:
    image: redis:7.2-alpine
    environment:
      - TZ=${TZ:-Asia/Tokyo}
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        tag: "docker.{{.Name}}"
    depends_on:
      - fluentd
    deploy:
      mode: replicated
      replicas: 1
  nginx:
    image: nginx:1.25-alpine
    hostname: "nginx-{{.Task.Slot}}"
    environment:
      - TZ=${TZ:-Asia/Tokyo}
    volumes:
      - ${SHARED_DIR:-/mnt/gluster/ke2me}/home:/var/opt/kompira
    configs:
      - source: nginx-config-default
        target: /etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        tag: "docker.{{.Name}}"
    depends_on:
      - fluentd
      - kompira
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
  rabbitmq:
    image: rabbitmq:3.12-alpine
    hostname: "rabbitmq-{{.Task.Slot}}"
    volumes:
      - /var/lib/rabbitmq
    configs:
      - source: rabbitmq-config
        target: /etc/rabbitmq/rabbitmq.conf
    environment:
      RABBITMQ_DATA_DIR: /var/lib/rabbitmq    # デフォルト値なので指定不要だが、ボリュームのマウントポイントと一致させるために明示的に指定しておく
      RABBITMQ_ERLANG_COOKIE: SECRET_COOKIE
      TZ: ${TZ:-Asia/Tokyo}
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        tag: "docker.{{.Name}}"
    depends_on:
      - fluentd
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1

configs:
  fluentd-config:
    file: ../configs/fluentd-swarm.conf
  nginx-config-default:
    file: ../configs/nginx-default.conf
  kompira-audit:
    file: ../configs/kompira_audit.yaml
  kompira-config:
    file: ../configs/kompira.conf
  rabbitmq-config:
    file: ../configs/rabbitmq-cluster.conf
