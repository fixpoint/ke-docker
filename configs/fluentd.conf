<source>
  @type forward
</source>

<filter audit>
  @type parser
  key_name log
  reserve_time true
  <parse>
    @type json
  </parse>
</filter>

<match /docker\.ke2\w*[-_]kengine.*/>
  # kengine の出力をその形式から process/audit/kengine のログに分離する
  @type rewrite_tag_filter
  <rule>
    key log
    pattern /^\[[\w ,-:]+\] Process\(\d+\):/
    tag process
  </rule>
  <rule>
    key log
    pattern /^{.+}$/
    tag audit
  </rule>
  <rule>
    key log
    pattern /.+/
    tag kengine
  </rule>
</match>

<match /docker\.ke2\w*[-_]kompira.*/>
  # kompira の出力をその形式から audit/kompira のログに分離する
  @type rewrite_tag_filter
  <rule>
    key log
    pattern /^{.+}$/
    tag audit
  </rule>
  <rule>
    key log
    pattern /.+/
    tag kompira
  </rule>
</match>

<match docker.**>
  @type rewrite_tag_filter
  # その他コンテナのログは container_name で分離する
  # docker compose up 環境: container_name="ke2-<service_name>..."
  # docker stack deploy ke2... 環境: container_name="/ke2..._<service_name>..."
  <rule>
    key container_name
    pattern /^\/?ke2\w*[-_](\w+)/
    tag $1
  </rule>
  <rule>
    key container_name
    pattern /.+/
    tag unknown
  </rule>
</match>

<match unknown>
  # unknown はレコードをそのまま出力する
  @type file
  path /var/log/kompira/${tag}
  append true
  <buffer tag,time>
    @type memory
    flush_mode immediate
    flush_thread_burst_interval 0.0
  </buffer>
  <format>
    @type out_file
  </format>
</match>

<match audit>
  # audit ログは JSON 形式で出力する
  @type file
  path /var/log/kompira/${tag}
  append true
  <buffer tag,time>
    @type memory
    flush_mode immediate
    flush_thread_burst_interval 0.0
  </buffer>
  <format>
    @type json
  </format>
</match>

<match *>
  # audit 以外のログは log をそのまま出力する
  @type file
  path /var/log/kompira/${tag}
  append true
  <buffer tag,time>
    @type memory
    flush_mode immediate
    flush_thread_burst_interval 0.0
  </buffer>
  <format>
    @type single_value
    message_key log
  </format>
</match>
